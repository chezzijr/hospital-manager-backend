/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java'
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'

    id 'eclipse'
    id 'idea'
}

java {
  sourceCompatibility = '21'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation libs.guava

    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.4'
    // webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'com.google.firebase:firebase-admin:9.2.0'

    // springdoc-openapi-starter-webmvc-ui
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit4 test framework
            useJUnit('4.13.2')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.hospitalmanager.App'
}

// run.doFirst {
//     // Load environment variables from .env file
//     file('.env').readLines().each() {
//         if (!it.isEmpty() && !it.startsWith("#")) {
//             def pos = it.indexOf("=")
//                 def key = it.substring(0, pos)
//                 def value = it.substring(pos + 1)

//                 if (System.getenv(key) == null) {
//                     environment key, value
//                 }
//         }
//     }
// }
